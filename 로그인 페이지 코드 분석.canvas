{
	"nodes":[
		{"id":"5101bfc4a8b9a1a2","x":-232,"y":-402,"width":865,"height":400,"type":"text","text":"```java\n@RequestMapping(\"/main\")  \npublic String main(HttpSession session, Model model) {  \n    log.info(\"@# main\");  \n    //main페이지에 진입 할 때 세션이 있으면 가져오고 없으면 생성\n    //근데 세션에 dto를 다 저장해버리네 (맞나? 내일 알아보기)\n    MemDTO user = (MemDTO) session.getAttribute(\"user\");  \n    //해당 유저 아이디의 세션이 있다면 \n    if (user != null) {  \n\t    //헤더 부분에 표시되는 부분인데 어짜피 헤더가 main.jsp에 속해 있으니 \n\t    //main/main으로 보내는 거임 \n        model.addAttribute(\"memName\", user.getMemName());  \n    }  \n    return \"main/main\";  \n}\n```"},
		{"id":"8222ff3e5cf7c380","x":-232,"y":-462,"width":421,"height":60,"type":"text","text":"## 코드 기능 : 사용자 세션 확인 "},
		{"id":"ba6b44f035531f48","x":-232,"y":-538,"width":475,"height":76,"type":"text","text":"# @RequestMapping(\"/main\") "},
		{"id":"8f652359d2d24010","x":-180,"y":-1750,"width":2081,"height":252,"type":"text","text":"# sql \n```sql\nSELECT tb.memId, tb.memPwd, tb.memName, tb.cpId, cp.companyType, cp.companyRegistrationNum, cp.companyRepresentativeName, cp.companyName, cp.companyAddr, cp.companyBusinessRegistration AS companyBusinessRegistration, tb.userType FROM signup_tb tb\nLEFT JOIN signup_cp cp\nON tb.cpId = cp.id\nWHERE tb.memId = ?\";\n```"},
		{"id":"121173966b1ce4df","x":-180,"y":-1887,"width":400,"height":104,"type":"file","file":"Pasted image 20240724225741.png"},
		{"id":"c6328d2961ce9885","x":-180,"y":-1973,"width":250,"height":60,"type":"text","text":"# signup_tb tb"},
		{"id":"44e5e72b9fb7a704","x":838,"y":-1952,"width":355,"height":60,"type":"text","text":"# signup_cp cp  "},
		{"id":"22001f94ee66ac0d","x":838,"y":-1887,"width":355,"height":101,"type":"file","file":"Pasted image 20240724225830.png"},
		{"id":"d33434c216e69e49","x":396,"y":-2141,"width":295,"height":56,"type":"text","text":"🤔도대체 2개가 왜 필요하지"},
		{"id":"bc5afec143c5e703","x":396,"y":-2085,"width":250,"height":60,"type":"text","text":"♻️DB 싹 다시 생성 "},
		{"id":"b3183fe78bb52fc6","x":-2376,"y":-1107,"width":621,"height":206,"type":"text","text":"```java\n// 세션에 사용자 정보 저장  \nHttpSession session = request.getSession();  \nsession.setAttribute(\"user\", foundUser);  \nlog.info(\"사용자 세션 저장 완료: \" + foundUser.getMemId());  \nreturn \"redirect:main\";\n```"},
		{"id":"19fafae32a7ce5c6","x":-2376,"y":-1201,"width":435,"height":69,"type":"text","text":"# 로그인 성공 시  세션 저장 "},
		{"id":"ffc46a4c08323973","x":633,"y":-143,"width":556,"height":141,"type":"text","text":"♻️ 세션을 핸들링 하는 서비스 따로 빼기\n- 로그인 성공하면 세션 서비스 호출해서 세션 생성하고\n- 메인 컨트롤러에 세션 서비스 호출해서 세션 확인"},
		{"id":"caa22fcc6ad8b91b","x":633,"y":-350,"width":690,"height":125,"type":"text","text":"현재 모든 페이지 요청 경로는 같은 컨트롤러로 연결되어 있음 \n그래서 세션 확인 코드를 각 페이지마다 넣는게 아니라 한번만 넣어도 됨 \n만약 중앙집중화로 짜지 않았더라면 각 페이지에서 세션 확인하는 코드를 실행해야함"},
		{"id":"eb2e1b82b1e416a2","x":2037,"y":-737,"width":1146,"height":1019,"type":"text","text":"```java\n@GetMapping(\"requestPage/{page}\")\npublic String requestPage(@PathVariable(\"page\") String page, Model model, JobseekerCriteria cri, HttpServletRequest request) {\n    log.info(\"요청 페이지 -> \" + page);\n\n    HttpSession session = request.getSession(false); // 기존 세션만 가져오기, 새 세션 생성하지 않음\n\n    // 세션 확인 및 리다이렉트 처리\n    if (session == null || session.getAttribute(\"user\") == null) {\n        if (!page.equals(\"login\")) {\n            return \"redirect:/login\"; // 로그인 페이지로 리다이렉트\n        }\n    }\n\n\n    // 세션이 유효한 경우\n    //상단에 유저 이름 표시하는 코드 추가하고\n    switch (page) {\n        case \"main\":\n            return enterMainContent(model);\n        case \"login\":\n            return memController.login(model);\n        case \"register\":\n            return memController.register(model);\n        case \"jobPosting\":\n            return jobPostingController.enterJobPosting(request, model);\n        case \"jobseekerBoard\":\n            return jobseekerPageController.listWithPaging(cri, model);\n        case \"resume\":\n            return resumeController.resister(model, session);\n        case \"jobPostingResister\":\n            return addJobPostingController.showAddJobPostingForm(model, session);\n        case \"jobseekerWrite_view\":\n            return \"jobseekerWrite_view\"; // 로그인 확인은 이미 중앙에서 처리됨\n        case \"logout\":\n            session.invalidate(); // 세션 무효화\n            return \"redirect:/login\";\n    }\n\n    return \"main/main\";\n}\n\n```"},
		{"id":"ad4a695d9334bb1b","x":3490,"y":-287,"width":534,"height":175,"type":"text","text":"### 메인 컨트롤러 리팩토링 하기\npage값도 그냥 파라미터로 넘겨버려서 \nmodel.attribute(page)이런식으로  페이지 값 바로 생성하기 "},
		{"id":"afd454b1d2b8017f","x":3548,"y":-534,"width":476,"height":78,"type":"text","text":"어차피 main/main으로 연결이 다 되는거니까 유저이름 상단에 표시하는 코드 한번만 추가  하면 됨. "},
		{"id":"3648e93b067f44ab","x":1526,"y":-285,"width":250,"height":60,"type":"text","text":"### 이런식으로 "},
		{"id":"139fd353e218078e","x":529,"y":-602,"width":631,"height":102,"type":"text","text":"### Refactory\n공통적인 세션 확인은 기본 컨트롤러에서 처리하기"},
		{"id":"252a2ce3bc3c8e9b","x":-280,"y":574,"width":523,"height":89,"type":"text","text":"# @RequestMapping(\"/login_ok\")"},
		{"id":"1a91f8cadab24b7d","x":-280,"y":663,"width":975,"height":479,"type":"text","text":"```java\n//해당 엔드포인트를 사용하는 페이지가 없는걸로 추정됨\n@RequestMapping(\"/login_ok\")\n\n//🔥이 코드는 삭제되어야 할 것 같음\n//기능 중복, 실제로 사용 안되고 있음\npublic String login_ok(HttpSession session, Model model) {\n\nlog.info(\"@# login_ok\");\n\nMemDTO user = (MemDTO) session.getAttribute(\"user\");\n\nif (user != null) {\n\nmodel.addAttribute(\"memName\", user.getMemName());\n\n}\n//해당 jsp 파일도 사용안하는 걸로 추정 \nreturn \"login_ok\";\n\n}\n```"},
		{"id":"d69add45d4feb1ed","x":360,"y":1991,"width":528,"height":79,"type":"text","text":"# 회원가입 관련 컨트롤러 "}
	],
	"edges":[
		{"id":"71d9180bce65257a","fromNode":"caa22fcc6ad8b91b","fromSide":"right","toNode":"eb2e1b82b1e416a2","toSide":"left"},
		{"id":"15d6128b959706c4","fromNode":"eb2e1b82b1e416a2","fromSide":"right","toNode":"ad4a695d9334bb1b","toSide":"left"},
		{"id":"b774ba2e92a6952c","fromNode":"eb2e1b82b1e416a2","fromSide":"right","toNode":"afd454b1d2b8017f","toSide":"left"},
		{"id":"2cc1793cfd11cdba","fromNode":"5101bfc4a8b9a1a2","fromSide":"bottom","toNode":"1a91f8cadab24b7d","toSide":"top"}
	]
}