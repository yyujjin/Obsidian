{
	"nodes":[
		{"id":"614c21290ffe2762","type":"text","text":"```java\n\npackage com.sideproject.grading.controller;\n\nimport com.sideproject.grading.domain.SelectedAnswer;\nimport com.sideproject.grading.domain.SelectedAnswerManager;\nimport com.sideproject.grading.service.WrongAnswerService;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@Controller\npublic class GradingController {\n\n\t//틀린문제 핸들링하는 서비스단 가져오기\n    private WrongAnswerService wrongAnswerService;\n\n\t//이 컨트롤러에서 사용할 수 있게 만들어주기\n\t//🤔나는 그냥 Autowired 로 했는데 이렇게 해주는 이유가 있는지 private으로 하면 더 좋다고는 하는데 \n    public GradingController(WrongAnswerService wrongAnswerService) {\n        this.wrongAnswerService = wrongAnswerService;\n    }\n\n\t//start html 연결\n    @GetMapping(\"/\")\n    public String start() {\n        return \"start\";\n    }\n\n\t//result html 연결\n    @GetMapping(\"/result\")\n    public String result() {\n        return \"result\";\n    }\n\n    @GetMapping(\"/wrong-answer\")\n    public String wrongAnswer(Model model) {\n        // TODO answer-selection 에서 받아올 데이터\n        // answer-selection 에서 데이터 받아와서 \n        // Radio 번호,  answer-selection 에서 받아온 선택된 데이터 형식으로 저장 \n        Map<Integer, SelectedAnswer> testAnswers = new HashMap<>();\n        testAnswers.put(1, new SelectedAnswer(1, 2));\n        testAnswers.put(2, new SelectedAnswer(2, 4));\n        testAnswers.put(3, new SelectedAnswer(3, 2));\n    \n\t    //1. 사용자가 선택한 답들 받아와서 밑에 메서드실행해서 배열로 저장시키고\n        SelectedAnswerManager.setSelectedAnswers(testAnswers);\n\t\t//2. 정답이랑 위에 저장된 배열이랑 비교해서 틀린답 배열 받아옴     \n        List<Integer> wrongAnswers = wrongAnswerService.getWrongAnswers();\n\t\t//받아온 값 wrong-answer.HTML로 넘겨서 화면에 출력\n        model.addAttribute(\"wrongAnswers\", wrongAnswers);\n\n        return \"wrong-answer\";\n    }\n}\n```","x":1339,"y":-20,"width":1021,"height":1340},
		{"id":"017e25f780058752","type":"text","text":"```JAVA\nList<Integer> wrongAnswers = wrongAnswerService.getWrongAnswers();\n```\n","x":2600,"y":608,"width":700,"height":85},
		{"id":"ab36041afc762517","type":"text","text":"틀린 답 받아오기","x":2800,"y":520,"width":250,"height":60},
		{"id":"212831ad16a6ef21","type":"text","text":"## SelectedAnswerManager\n\n사용자가 선택한 답들의 모음      \n문제들이 모여 배열을 이룸","x":5524,"y":1029,"width":447,"height":141},
		{"id":"b989b00243e447ae","type":"text","text":"# DOMAIN","x":5524,"y":969,"width":250,"height":60},
		{"id":"78695a0d8290d090","type":"text","text":"```JAVA\npackage com.sideproject.grading.domain;  \n  \npublic class SelectedAnswer {  \n    private int number;  \n    private int answer;  \n  \n    public SelectedAnswer(int number, int answer) {  \n        this.number = number;  \n        this.answer = answer;  \n    }  \n  \n    public int getNumber() {  \n        return number;  \n    }  \n  \n    public int getAnswer() {  \n        return answer;  \n    }  \n  \n}\n```","x":7029,"y":1159,"width":782,"height":481},
		{"id":"665e9f1e98cd1936","type":"text","text":"# DOMAIN","x":7029,"y":960,"width":250,"height":60},
		{"id":"7f6524362961c9c8","type":"text","text":"## SelectedAnswer\n껍데기\n문제 하나 당 저장되는 형식\n타입 설정","x":7029,"y":1020,"width":442,"height":139},
		{"id":"bb5e5115bb71f1be","type":"text","text":"```JAVA\npackage com.sideproject.grading.domain;  \n  \nimport java.util.Map;  \n  \npublic class  SelectedAnswerManager {  \n\t//오른쪽에 selectedAnswers타입을 selectedAnswers을 전역 변수로 배열 선언 \n\t//숫자 : SelectedAnswer객체 형식\n    private static Map<Integer, SelectedAnswer> selectedAnswers;  \n\t//GETTER\n\t//🤔어노테이션으로 안쓴 이유가 있는지?\n    public static Map<Integer, SelectedAnswer> getSelectedAnswers() {  \n        return selectedAnswers;  \n    }  \n\t//SETTER\n    public static void setSelectedAnswers(Map<Integer, SelectedAnswer> selectedAnswers) {  \n        SelectedAnswerManager.selectedAnswers = selectedAnswers;  \n    }  \n  \n  \n}\n```","x":5524,"y":1170,"width":905,"height":459},
		{"id":"7f623a6c9d19fece","type":"text","text":"# DOMAIN","x":5440,"y":-491,"width":250,"height":60},
		{"id":"87c8838943fc30c2","type":"text","text":"```JAVA\npackage com.sideproject.grading.domain;  \n  \nimport java.util.HashMap;  \nimport java.util.Map;  \n  \npublic class CorrectAnswers {  \n    private static Map<Integer, Integer> answers = new HashMap<Integer, Integer>() {{  \n        put(1, 2);  \n        put(2, 3);  \n        put(3, 1);  \n        put(4, 4);  \n        put(5, 2);  \n        put(6, 1);  \n        put(7, 3);  \n        put(8, 4);  \n        put(9, 2);  \n        put(10, 1);  \n        put(11, 3);  \n        put(12, 4);  \n        put(13, 2);  \n        put(14, 1);  \n        put(15, 3);  \n        put(16, 4);  \n        put(17, 2);  \n        put(18, 1);  \n        put(19, 3);  \n        put(20, 4);  \n        put(21, 2);  \n        put(22, 1);  \n        put(23, 3);  \n        put(24, 4);  \n        put(25, 2);  \n        put(26, 1);  \n        put(27, 3);  \n        put(28, 4);  \n        put(29, 2);  \n        put(30, 1);  \n    }};  \n  \n    public static Map<Integer, Integer> getAnswers() {  \n        return answers;  \n    }  \n}\n```","x":5440,"y":-331,"width":908,"height":982},
		{"id":"d479777ae93be0cc","type":"text","text":"## CorrectAnswers \n문제의 정답","x":5440,"y":-431,"width":309,"height":100},
		{"id":"a73fb635bf7e33c4","type":"text","text":"```JAVA\npackage com.sideproject.grading.service;  \n  \nimport com.sideproject.grading.domain.CorrectAnswers;  \nimport com.sideproject.grading.domain.SelectedAnswer;  \nimport com.sideproject.grading.domain.SelectedAnswerManager;  \nimport org.springframework.beans.factory.annotation.Autowired;  \nimport org.springframework.stereotype.Service;  \n  \nimport java.util.ArrayList;  \nimport java.util.List;  \nimport java.util.Map;  \nimport java.util.Set;  \n  \n@Service  \npublic class WrongAnswerService {  \n\n\n    //🤔여기서 빈을 한번 더 주입하는 이유??\n    @Autowired  \n    public WrongAnswerService() {}  \n\t//이 메서드가 실행됨\n    public List<Integer> getWrongAnswers() {  \n        List<Integer> wrongAnswers = new ArrayList<>();  \n\t//정답지 가져와서 \n        Map<Integer, Integer> correctAnswers = CorrectAnswers.getAnswers();  \n\t   //selectedAnswers 배열을 가져와서 selectedAnswers 맵에 저장\n\t   //맵형식- {번호 :SelectedAnswer객체}     \n        Map<Integer, SelectedAnswer> selectedAnswers = SelectedAnswerManager.getSelectedAnswers();  \n\t//🤔SET 컬렉션의 기능이 있었는데 자동정렬인가, 중복인가\n\t\n\t//📌`Map.Entry` 인터페이스는 키와 값을 가져오는 메서드(`getKey()`, `getValue()`)를 정의\n\t//📌'entrySet()'맵의 모든 키-값 쌍을 반복하고 출력\n\t//selectedAnswers 맵에 저장된 요소 하나하나를 모두 출력해서 SET컬렉션에 저장 -> SET때문에 순서대로 저장     \n        Set<Map.Entry<Integer, SelectedAnswer>> entries = selectedAnswers.entrySet();  \n    //for-each를 사용해 entries에 저장된 맵의 요소 하나하나를 빼냄\n        for (Map.Entry<Integer, SelectedAnswer> entry: entries) {  \n\t        //entry의 키값을 파라미터로 보내서 correctAnswer(정답배열) 에 해당되는 키의 value를 가져옴\n            int correctAnswer = correctAnswers.get(entry.getKey());  \n            //일치하지 않으면 해당 value를 위에서 선언한 wrongAnswers 배열에 넣음\n            if (entry.getValue().getAnswer() != correctAnswer) {  \n                wrongAnswers.add(entry.getKey());  \n            }  \n        }  \n  \n        return wrongAnswers;  \n    }  \n}\n``` ","x":3705,"y":116,"width":1030,"height":1070},
		{"id":"3b7e742dbbe8b1c8","type":"text","text":"# SERVICE","x":3705,"y":-188,"width":250,"height":63},
		{"id":"f03820520e0367dd","type":"text","text":"## WrongAnswerService\n\n- 정답지 배열 가져오고\n- 사용자가 선택한 배열가져와서\n- set으로 순서 정렬하고\n- 정답이랑 틀린 답은  wrongAnswers 배열에 저장하는 기능 ","x":3705,"y":-125,"width":600,"height":210},
		{"id":"5afcd167a568ab86","x":-926,"y":839,"width":806,"height":421,"type":"text","text":"```java\npackage com.sideproject.grading.domain;  \n  \npublic class Question {  \n    private int number;  \n    private boolean isScrap;  \n    private boolean isWrong;  \n  \n    public Question(int number) {  \n        this.number = number;  \n    }  \n  \n    public int getNumber() {  \n        return number;  \n    }  \n}\n``` "},
		{"id":"5e5cfaa895027dd7","x":-926,"y":660,"width":250,"height":60,"type":"text","text":"# DOMAIN"},
		{"id":"5f3c79236a0b7ce3","x":-926,"y":740,"width":250,"height":60,"type":"text","text":"## Question"},
		{"id":"d884db9c6a26c940","x":-40,"y":-9,"width":1139,"height":1370,"type":"text","text":"```java\npackage com.sideproject.grading.controller;  \n  \nimport com.sideproject.grading.domain.SelectedAnswerManager;  \nimport com.sideproject.grading.service.AnswerSelectionService;  \nimport jakarta.servlet.http.HttpServletRequest;  \nimport org.springframework.beans.factory.annotation.Value;  \nimport org.springframework.stereotype.Controller;  \nimport org.springframework.ui.Model;  \nimport org.springframework.web.bind.annotation.GetMapping;  \nimport org.springframework.web.bind.annotation.PostMapping;  \nimport org.springframework.web.bind.annotation.RequestParam;  \n  \nimport java.util.Enumeration;  \nimport java.util.HashMap;  \nimport java.util.Map;  \n  \n@Controller  \npublic class AnswerSelectionController { \n\t//생성자 기반 주입, 클래스 생성시 자동으로 해당 서비스 빈 주입됨 \n    private final AnswerSelectionService answerSelectionService;  \n\t\n\t//외부 설정 파일(예: `application.properties` 또는 `application.yml`)에서 값을 가져와 필드에 주입하는 데 사용됩니다.\n\t//총 문제는 30이고 한페이지당 5개씩 출력 \n    @Value(\"${answer.totalCount}\")  \n    int totalCount;  \n  \n    @Value(\"${page.limitCount}\")  \n    int limitCount;  \n\t//@AllArgsConstructor 사용해도 될듯?\n    public AnswerSelectionController(AnswerSelectionService answerSelectionService) {  \n        this.answerSelectionService = answerSelectionService;  \n    }  \n  \n    @GetMapping(\"/answer-selection\") \n    //해당 페이지 번호를 파라미터로 받고 디폴트는 1로 한다.  \n    public String answerSelection(@RequestParam(value = \"page\", defaultValue = \"1\") int page, Model model) {  \n        model.addAttribute(\"page\", page);  \n        model.addAttribute(\"totalCount\", totalCount);  \n        model.addAttribute(\"limitCount\", limitCount);  \n  \n        return \"answer-selection\";  \n    }  \n  \n    @PostMapping(\"/questions/next\")  \n    public String next(HttpServletRequest request) {  \n        Map<String, String> parameters = new HashMap<>();  \n  \n        Enumeration<String> parameterNames = request.getParameterNames();  \n        while (parameterNames.hasMoreElements()) {  \n            String paramName = parameterNames.nextElement();  \n            parameters.put(paramName, request.getParameter(paramName));  \n        }  \n  \n        SelectedAnswerManager.setSelectedAnswers(answerSelectionService.getSelectedAnswers(parameters));  \n  \n  \n        int nextPage = answerSelectionService.getPage(parameters);  \n  \n        if (nextPage > totalCount / limitCount) {  \n            return \"redirect:/result\";  \n        }  \n  \n        return \"redirect:/answer-selection?page=\" + nextPage;  \n    }  \n  \n}\n```"},
		{"id":"c0e2819960cf1ff8","type":"text","text":"# CONTROLLER","x":-40,"y":-300,"width":276,"height":61},
		{"id":"d1e368f9687e5260","x":-40,"y":-225,"width":467,"height":56,"type":"text","text":"## AnswerSelectionController"},
		{"id":"2236a740fe701643","type":"text","text":"# CONTROLLER","x":1339,"y":-286,"width":276,"height":61},
		{"id":"e874f2d333a1f4b5","type":"text","text":"## GradingController\n- 정답 채점","x":1339,"y":-203,"width":441,"height":183},
		{"id":"5b1c1101a0e25467","type":"text","text":"# 분석해야하는 코드 목록","x":-2200,"y":-613,"width":401,"height":101},
		{"id":"c85164ce73522e57","type":"file","file":"Pasted image 20240718144448.png","x":-2199,"y":-457,"width":400,"height":375},
		{"id":"3002aaf9892687ce","x":-315,"y":2040,"width":1689,"height":1305,"type":"text","text":"```html\n<!DOCTYPE HTML>  \n<html xmlns:th=\"http://www.thymeleaf.org\">  \n<head>  \n    <title>Grading Application</title>  \n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>  \n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\">  \n</head>  \n<body>  \n<form method=\"post\" action=\"/questions/next\" class=\"container p-5 d-flex gap-3 flex-column justify-content-center align-items-center\">  \n    <div class=\"w-50 d-flex flex-column mb-5\" th:each=\"number : ${#numbers.sequence((page - 1) * limitCount + 1, page * limitCount)}\">  \n        <div class=\"d-flex align-items-center mb-2\">  \n            <span class=\"pe-2\" th:text=\"${number} + 번\">1번</span>  \n            <div>  \n                <input type=\"radio\" class=\"btn-check btn-mark\" th:attr=\"id=${'btn-check-scrap-'+number}, name=${number+'-mark'}\" autocomplete=\"off\">  \n                <label class=\"btn btn-outline-secondary\" th:attr=\"for=${'btn-check-scrap-'+number}\">  \n                    <img src=\"/images/scrap.jpeg\" width=\"20\"/>  \n                    알쏭달쏭  \n                </label>  \n                <input type=\"radio\" class=\"btn-check btn-mark\" th:attr=\"id=${'btn-check-wrong-'+number}, name=${number+'-mark'}\" autocomplete=\"off\">  \n                <label class=\"btn btn-outline-secondary\" th:attr=\"for=${'btn-check-wrong-'+number}\">  \n                    <img src=\"/images/wrong.jpeg\" width=\"20\"/>  \n                    모르겠다  \n                </label>  \n            </div>  \n        </div>  \n        <div class=\"d-flex justify-content-around border p-2\">  \n            <label class=\"pe-4\">  \n                <input type=\"radio\" th:attr=\"name=${number+'_answer'}\" required value=\"1\">  \n                1  \n            </label>  \n            <label class=\"pe-4\">  \n                <input type=\"radio\" th:attr=\"name=${number+'_answer'}\" required value=\"2\">  \n                2  \n            </label>  \n            <label class=\"pe-4\">  \n                <input type=\"radio\" th:attr=\"name=${number+'_answer'}\" required value=\"3\">  \n                3  \n            </label>  \n            <label class=\"pe-4\">  \n                <input type=\"radio\" th:attr=\"name=${number+'_answer'}\" required value=\"4\">  \n                4  \n            </label>  \n        </div>  \n    </div>  \n    <input type=\"hidden\" name=\"scrap\">  \n    <input type=\"hidden\" name=\"page\" th:attr=\"value=${page}\">  \n    <input type=\"hidden\" name=\"pageType\" id=\"pageType\">  \n    <div>  \n        <button data-type=\"prev\" class=\"btn btn-secondary\" type=\"submit\"  \n\t\t        <!\n                th:classappend=\"${page == 1} ? 'disabled' : ''\"> << 이전 페이지  \n        </button>  \n        <button data-type=\"next\" class=\"btn btn-primary\" type=\"submit\"  \n                th:text=\"${page == totalCount / limitCount} ? ' >> 결과화면' : ' >> 다음 페이지'\"></button>  \n    </div>  \n</form>  \n<script src=\"/js/answer-selection.js\"></script>  \n</body>  \n</html>\n```"},
		{"id":"1ab116a14fc7b665","x":-315,"y":1920,"width":535,"height":120,"type":"text","text":"# answer-selectionHTML\n- 답 체크하는 페이지  "}
	],
	"edges":[
		{"id":"c800aaf41fadf407","fromNode":"87c8838943fc30c2","fromSide":"left","toNode":"a73fb635bf7e33c4","toSide":"right"},
		{"id":"7e5746cd5edee4e4","fromNode":"bb5e5115bb71f1be","fromSide":"left","toNode":"a73fb635bf7e33c4","toSide":"right"},
		{"id":"4aeddeffe529a5c2","fromNode":"bb5e5115bb71f1be","fromSide":"right","toNode":"78695a0d8290d090","toSide":"left"},
		{"id":"48b137566fff0e33","fromNode":"a73fb635bf7e33c4","fromSide":"left","toNode":"614c21290ffe2762","toSide":"right"},
		{"id":"8409ec17ec35807d","fromNode":"3002aaf9892687ce","fromSide":"top","toNode":"d884db9c6a26c940","toSide":"bottom"}
	]
}